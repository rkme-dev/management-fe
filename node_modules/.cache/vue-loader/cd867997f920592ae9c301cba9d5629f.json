{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/pages/master-files/finish-products/UnitAndPackingForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/pages/master-files/finish-products/UnitAndPackingForm.vue","mtime":1664792701506},{"path":"/Users/mark/projects/enco-fe/node_modules/css-loader/dist/cjs.js","mtime":1665368593526},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1665368593779},{"path":"/Users/mark/projects/enco-fe/node_modules/postcss-loader/src/index.js","mtime":1665368593757},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1665368576185},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1665368593779}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRleHQtZ3JlZW4gaW5wdXQgewogIGNvbG9yOiBjaGFydHJldXNlICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["UnitAndPackingForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgPA;AACA;AACA","file":"UnitAndPackingForm.vue","sourceRoot":"src/views/pages/master-files/finish-products","sourcesContent":["<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n    >\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"unitItems\"\n        :items-per-page=\"5\"\n      >\n        <template v-slot:top>\n          <v-toolbar\n            flat\n            color=\"primary\"\n          >\n            <v-dialog\n              v-model=\"itemFormModal\"\n              width=\"1200px\"\n              height=\"500px\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  elevation=\"10\"\n                  dark\n                  class=\"mb-2\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  Add Unit\n                </v-btn>\n              </template>\n              <v-card>\n                <v-card-title>\n                  <span class=\"headline\">{{ formTitle }}</span>\n                </v-card-title>\n                <v-card-text>\n                  <v-form>\n                    <v-row>\n                      <v-col cols=\"12\">\n                        <v-alert\n                          color=\"primary\"\n                          text\n                          style=\"margin-bottom: -10px\"\n                        >\n                          <div class=\"d-flex align-start\">\n                            <v-icon color=\"primary\">\n                              {{ icons.mdiTextBoxPlus }}\n                            </v-icon>\n                            <div class=\"ms-3\">\n                              <p class=\"text-base font-weight-medium mb-1\">\n                                Unit and Packing\n                              </p>\n                            </div>\n                          </div>\n                        </v-alert>\n                      </v-col>\n                      <v-col\n                        cols=\"6\"\n                      >\n                        <v-select\n                          v-model=\"currentItem.unit_id\"\n                          :items=\"unitsList\"\n                          item-text=\"name\"\n                          item-value=\"id\"\n                          :error-messages=\"errors.unit_id\"\n                          label=\"Unit\"\n                        >\n                        </v-select>\n                      </v-col>\n                      <v-col\n                        cols=\"6\"\n                      >\n                        <v-text-field\n                          v-model=\"currentItem.packing\"\n                          outlined\n                          dense\n                          type=\"number\"\n                          min=\"0\"\n                          step=\"1\"\n                          onfocus=\"this.previousValue = this.value\"\n                          onkeydown=\"this.previousValue = this.value\"\n                          oninput=\"validity.valid || (value = this.previousValue)\"\n                          hide-details=\"auto\"\n                          :error-messages=\"errors.packing\"\n                          label=\"Packing\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col\n                        cols=\"12\"\n                        class=\"d-flex\"\n                      >\n                        <v-btn\n                          v-if=\"currentItem.unit_id && currentItem.packing\"\n                          color=\"primary\"\n                          class=\"me-3 mt-4\"\n                          @click=\"addItem\"\n                        >\n                          Submit\n                        </v-btn>\n                        <v-btn\n                          outlined\n                          class=\"me-3 mt-4\"\n                          type=\"reset\"\n                          @click.prevent=\"cancel\"\n                        >\n                          Cancel\n                        </v-btn>\n                      </v-col>\n                    </v-row>\n                  </v-form>\n                </v-card-text>\n              </v-card>\n            </v-dialog>\n          </v-toolbar>\n        </template>\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon\n            small\n            @click=\"deleteItem(item)\"\n          >\n            {{ icons.mdiDeleteCircle }}\n          </v-icon>\n        </template>\n      </v-data-table>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {\n  mdiAccountEdit,\n  mdiDeleteCircle,\n  mdiInformation,\n  mdiTextBoxPlus,\n} from '@mdi/js'\nimport {\n  computed, ref, toRef,\n} from '@vue/composition-api'\nimport store from '@/store'\n\nexport default {\n  name: 'UnitAndPackingForm',\n  props: {\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: (() => false),\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: (() => 'Create'),\n    },\n    existingUnits: {\n      type: Array,\n      required: true,\n      default: (() => []),\n    },\n    items: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props, { emit }) {\n    const isDisabled = toRef(props, 'disabled')\n    const productData = toRef(props, 'product')\n    const itemFormModal = ref(false)\n    const errors = computed(() => store.state.FinishProductStore.errors)\n    const formData = ref({})\n    const formTitle = ref('Add Unit and Packing')\n    const unitItems = toRef(props, 'existingUnits')\n\n    const unitsList = computed(() => store.state.UnitPackingStore.list)\n    const currentItem = ref({})\n\n    const units = ref([])\n\n    const addItem = () => {\n      const exist = unitItems.value.find(rowItem => rowItem.id === currentItem.value.unit_id)\n\n      if (exist === undefined || exist === null) {\n        const unit = unitsList.value.find(item => currentItem.value.unit_id === item.id)\n\n        emit('addedUnitPacking', {\n          name: unit.name,\n          pivot: {\n            unit_packing_id: unit.id,\n            packing: currentItem.value.packing,\n          },\n          id: unit.id,\n        })\n      }\n\n      currentItem.value.packing = null\n      currentItem.value.unit_id = null\n      itemFormModal.value = false\n    }\n\n    const deleteItem = item => {\n      const indexItem = unitItems.value.findIndex(unitItem => unitItem.id === item.id)\n      unitItems.value.splice(indexItem, 1)\n      itemFormModal.value = false\n    }\n\n    const cancel = () => {\n      itemFormModal.value = false\n    }\n\n    return {\n      unitsList,\n      errors,\n      addItem,\n      cancel,\n      deleteItem,\n      isDisabled,\n      formTitle,\n      currentItem,\n      unitItems,\n      formData,\n      itemFormModal,\n      units,\n      headers: [\n        { text: 'ID', sortable: true, value: 'pivot.unit_packing_id' },\n        { text: 'Unit Name', sortable: true, value: 'name' },\n        { text: 'Packing', value: 'pivot.packing' },\n        { text: 'Actions', value: 'actions' },\n      ],\n      icons: {\n        mdiAccountEdit,\n        mdiDeleteCircle,\n        mdiInformation,\n        mdiTextBoxPlus,\n      },\n    }\n  },\n}\n</script>\n\n<style>\n.text-green input {\n  color: chartreuse !important;\n}\n</style>\n"]}]}