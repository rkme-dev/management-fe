{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/pages/sales/client/ClientInfo.vue?vue&type=template&id=50ed2945&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/pages/sales/client/ClientInfo.vue","mtime":1656456528689},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1650363912993},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1650363919730},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1650363912993},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1650363919730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}