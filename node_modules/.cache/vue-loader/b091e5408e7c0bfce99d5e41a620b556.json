{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/cards/CardBasic.vue?vue&type=template&id=6fcca708&scoped=true&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/cards/CardBasic.vue","mtime":1654585219630},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1665368576185},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665368593779},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1665368576185},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1665368593779}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}