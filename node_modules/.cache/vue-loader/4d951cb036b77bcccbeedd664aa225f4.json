{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/pages/purchase-orders/purchase-order/PurchaseOrderInTransit.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/pages/purchase-orders/purchase-order/PurchaseOrderInTransit.vue","mtime":1662283060345},{"path":"/Users/mark/projects/enco-fe/node_modules/css-loader/dist/cjs.js","mtime":1665368593526},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1665368593779},{"path":"/Users/mark/projects/enco-fe/node_modules/postcss-loader/src/index.js","mtime":1665368593757},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1665368576185},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1665368593779}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dC1ncmVlbiBpbnB1dCB7CiAgY29sb3I6IGNoYXJ0cmV1c2UgIWltcG9ydGFudDsKfQoK"},{"version":3,"sources":["PurchaseOrderInTransit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0cA;AACA;AACA","file":"PurchaseOrderInTransit.vue","sourceRoot":"src/views/pages/purchase-orders/purchase-order","sourcesContent":["<template>\n  <v-card\n    flat\n    class=\"\"\n  >\n    <!-- tabs -->\n    <v-tabs\n      v-model=\"tab\"\n      show-arrows\n    >\n      <v-tab\n        v-for=\"tab in tabs\"\n        :key=\"tab.icon\"\n      >\n        <v-icon\n          size=\"30\"\n          class=\"me-3\"\n        >\n          {{ tab.icon }}\n        </v-icon>\n        <span>{{ tab.title }}</span>\n      </v-tab>\n    </v-tabs>\n\n    <!-- tabs item -->\n    <v-tabs-items v-model=\"tab\">\n      <v-tab-item>\n        <v-alert\n          v-show=\"showAlert\"\n          dense\n          text\n          type=\"success\"\n        >\n          Successfully marked purchase order as <strong>In Transit</strong>. You will be\n          automatically\n          redirected in a bit.\n        </v-alert>\n        <v-form class=\"multi-col-validation\">\n          <v-card-text class=\"pt-5\">\n            <v-row>\n              <v-col cols=\"6\">\n                <v-img\n                  class=\"mt-10\"\n                  aspect-ratio=\"1.7\"\n                  max-height=\"250\"\n                  contain\n                  lazy-src=\"https://cdn.openpr.com/V/5/V531717180_g.jpg\"\n                  src=\"https://cdn.openpr.com/V/5/V531717180_g.jpg\"\n                ></v-img>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-card-text class=\"mt-10\">\n                  <v-simple-table\n                    fixed-header\n                  >\n                    <v-subheader>\n                      Subheader\n                    </v-subheader>\n                    <template v-slot:default>\n                      <thead>\n                        <tr>\n                          <th class=\"text-left\">\n                            <span class=\"white--text\">\n                              Material Name\n                            </span>\n                          </th>\n                          <th class=\"text-left\">\n                            <span class=\"white--text\">\n                              Requested Quantity\n                            </span>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr\n                          v-for=\"(item, key) in orderItems\"\n                          :key=\"item.name\"\n                        >\n                          <td>\n                            <span class=\"white--text\">\n                              {{ item.name }}\n                            </span>\n                          </td>\n                          <td>\n                            <span class=\"white--text\">\n                              {{ item.quantity }}\n                            </span>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </template>\n                  </v-simple-table>\n                </v-card-text>\n              </v-col>\n              <v-col\n                cols=\"12\"\n                class=\"mt-10\"\n              >\n                <card-supplier-details\n                  :supplier-data=\"supplier\"\n                  :supplier-disabled=\"true\"\n                />\n              </v-col>\n              <v-col\n                cols=\"12\"\n                class=\"mt-6\"\n              >\n                <h2 class=\"font-weight-black mb-2 text-uppercase\">\n                  Payment Details\n                </h2>\n                <v-divider />\n              </v-col>\n              <v-col cols=\"3\">\n                <span class=\"white--text font-weight-semibold\">\n                  Remaining Balance\n                </span>\n              </v-col>\n              <v-col cols=\"4\">\n                <span class=\"text--accent-4 font-weight-medium error--text\">\n                  ${{ formatPrice(balanceToPay) }}\n                </span>\n              </v-col>\n              <v-col cols=\"4\">\n                <span class=\"text--accent-4 font-weight-light\">\n                </span>\n              </v-col>\n              <v-col cols=\"3\">\n                <span class=\"white--text text--accent-4 font-weight-semibold\">\n                  Current Paid Amount\n                </span>\n              </v-col>\n              <v-col cols=\"3\">\n                <span class=\"white--text text--accent-4 font-weight-semibold\">\n                  USD Amount\n                </span>\n              </v-col>\n              <v-col cols=\"4\">\n                <span class=\"white--text text--accent-4 font-weight-semibold\">\n                  PHP Amount\n                </span>\n              </v-col>\n              <v-col cols=\"3\">\n                <span class=\"text--accent-4 font-weight-semibold\">\n                </span>\n              </v-col>\n              <v-col\n                cols=\"3\"\n                class=\"mt-n5\"\n              >\n                <span class=\"text--accent-4 font-weight-medium success--text\">\n                  {{ optionsLocal.total_usd_paid_amount }}\n                </span>\n              </v-col>\n              <v-col\n                cols=\"4\"\n                class=\"mb-6 mt-n5\"\n              >\n                <span class=\"text--accent-4 font-weight-medium success--text\">\n                  {{ optionsLocal.total_peso_paid_amount }}\n                </span>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-divider />\n              </v-col>\n              <v-col cols=\"4\">\n                <v-text-field\n                  v-model=\"conversionRate\"\n                  prefix=\"PHP\"\n                  outlined\n                  dense\n                  class=\"text-green\"\n                  label=\"Philippine Peso per USD\"\n                  hide-details=\"auto\"\n                  :error-messages=\"errors.conversion_rate\"\n                  @input=\"moneyFormat('')\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"4\">\n                <v-text-field\n                  v-model=\"pesoPercentageToPay\"\n                  color=\"success\"\n                  prefix=\"PHP\"\n                  outlined\n                  readonly\n                  dense\n                  class=\"text-green\"\n                  label=\"PHP Amount to be paid\"\n                  hide-details=\"auto\"\n                  @input=\"moneyFormat('')\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"4\">\n                <v-text-field\n                  v-model=\"dollarPercentageToPay\"\n                  color=\"success\"\n                  prefix=\"PHP\"\n                  outlined\n                  readonly\n                  dense\n                  class=\"text-green\"\n                  label=\"USD Amount to be paid\"\n                  hide-details=\"auto\"\n                  @input=\"moneyFormat('')\"\n                ></v-text-field>\n              </v-col>\n              <v-col\n                cols=\"4\"\n              >\n                <v-text-field\n                  v-model=\"optionsLocal.fx_number\"\n                  outlined\n                  dense\n                  label=\"FX Number\"\n                  hide-details=\"auto\"\n                  :error-messages=\"errors.fx_number\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col\n                cols=\"12\"\n                class=\"mt-6\"\n              >\n                <h2 class=\"font-weight-black mb-2 text-uppercase\">\n                  Other Expenses\n                </h2>\n                <v-divider />\n              </v-col>\n              <v-col>\n                <div\n                  v-for=\"index in expenseRow\"\n                  :key=\"index\"\n                >\n                  <purchase-order-expenses\n                    :item-number=\"index\"\n                    @addExpensesRow=\"handleAddExpense\"\n                    @expenseAdded=\"attachExpense\"\n                  />\n                </div>\n              </v-col>\n            </v-row>\n          </v-card-text>\n\n          <v-card-text class=\"mt-10\">\n            <v-btn\n              v-if=\"canMarkAsInTransitPO\"\n              outlined\n              class=\"mr-3\"\n              color=\"primary\"\n              @click=\"save\"\n            >\n              Mark as In Transit\n            </v-btn>\n            <v-btn\n              outlined\n              type=\"reset\"\n              @click.prevent=\"goBack\"\n            >\n              Back to List\n            </v-btn>\n          </v-card-text>\n        </v-form>\n      </v-tab-item>\n      <v-tab-item>\n        <purchase-order-logs :order-id=\"id\"></purchase-order-logs>\n      </v-tab-item>\n      <v-tab-item>\n        <purchase-order-payment-logs :order-id=\"id\"></purchase-order-payment-logs>\n      </v-tab-item>\n    </v-tabs-items>\n  </v-card>\n</template>\n\n<script>\nimport {\n  computed, nextTick, ref, watch, onMounted,\n} from '@vue/composition-api'\nimport router from '@/router'\nimport store from '@/store'\nimport {\n  IN_TRANSIT_PURCHASE_ORDER,\n} from '@/store/actions.type'\nimport PurchaseOrdersService from '@/utils/services/purchase-orders.service'\nimport { mdiBookInformationVariant, mdiClipboardListOutline, mdiCurrencyUsd } from '@mdi/js'\nimport PurchaseOrderLogs from '@/views/pages/purchase-orders/purchase-order/logs/PurchaseOrderLogs.vue'\nimport PurchaseOrderPaymentLogs\nfrom '@/views/pages/purchase-orders/purchase-order/logs/PurchaseOrderPaymentLogs.vue'\nimport CardSupplierDetails from '@/views/pages/purchase-orders/component/CardSupplierDetails.vue'\nimport PurchaseOrderExpenses from '@/views/pages/purchase-orders/component/PurchaseOrderExpenses.vue'\n\nexport default {\n  components: {\n    PurchaseOrderPaymentLogs,\n    PurchaseOrderLogs,\n    CardSupplierDetails,\n    PurchaseOrderExpenses,\n  },\n  setup() {\n    const { id } = router.history.current.params\n    const conversionRate = ref()\n    const errors = computed(() => store.getters.errors)\n    const optionsLocal = ref({})\n    const details = ref({})\n    const supplier = ref({})\n    const showAlert = ref(false)\n    const orderItems = ref([])\n    const tab = ref('')\n    const price = ref('')\n    const dollarPercentageToPay = ref(0.00)\n    const pesoPercentageToPay = ref(0.00)\n    const balanceToPay = ref('')\n    const expenseRow = ref(1)\n    const attachedExpenses = ref({})\n    const canMarkAsInTransitPO = store.getters['AuthStore/hasAbility']('mark in transit-purchase order')\n\n    onMounted(async () => {\n      await PurchaseOrdersService.find(id)\n        .then(response => {\n          const { data } = response.data\n          optionsLocal.value = {\n            total_peso_paid_amount: data.total_peso_paid_amount,\n            total_usd_paid_amount: data.total_usd_paid_amount,\n            description: data.order.description,\n            fx_number: data.order.fx_id,\n            eta: data.order.eta,\n            total: data.order.total,\n            paid_amount: data.order.paid_amount,\n            items: {},\n            conversion_rate: null,\n          }\n\n          details.value = optionsLocal.value\n\n          balanceToPay.value = data.balance_amount\n          price.value = balanceToPay.value\n\n          supplier.value = data.supplier\n          orderItems.value = data.items\n        })\n    })\n\n    const debounce = (func, timeout = 500) => {\n      let timer\n\n      return (...args) => {\n        clearTimeout(timer)\n        timer = setTimeout(() => {\n          func.apply(this, args)\n        }, timeout)\n      }\n    }\n\n    const moneyFormat = debounce(field => {\n      conversionRate.value = parseFloat(conversionRate.value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n    })\n\n    const formatPrice = value => parseFloat(value)\n      .toFixed(2)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n\n    watch(conversionRate, value => {\n      const localConversionRate = parseFloat(value).toFixed(2)\n      optionsLocal.value.conversion_rate = localConversionRate\n      // eslint-disable-next-line radix\n      dollarPercentageToPay.value = parseInt(balanceToPay.value).toFixed(2).toString()\n      // eslint-disable-next-line radix\n      pesoPercentageToPay.value = parseInt(dollarPercentageToPay.value * localConversionRate).toFixed(2).toString()\n\n      pesoPercentageToPay.value = formatPrice(pesoPercentageToPay.value)\n      dollarPercentageToPay.value = formatPrice(dollarPercentageToPay.value)\n    }, true)\n\n    const goBack = () => {\n      router.push('/purchase-orders')\n    }\n\n    const resolveFormSuccess = () => {\n      showAlert.value = true\n      setTimeout(() => {\n        goBack()\n      }, 1000)\n    }\n\n    watch(\n      price,\n      value => {\n        const result = formatPrice(value)\n        // eslint-disable-next-line no-return-assign\n        nextTick(() => price.value = result)\n      },\n      { immediate: true },\n    )\n\n    const save = () => {\n      const currentForm = optionsLocal.value\n      currentForm.id = router.history.current.params.id\n      currentForm.usd_conversion = dollarPercentageToPay.value\n      currentForm.peso_conversion = pesoPercentageToPay.value\n      currentForm.paid_amount = price.value\n\n      if (attachedExpenses.value !== null) {\n        currentForm.expenses = attachedExpenses.value\n      }\n\n      store.dispatch(IN_TRANSIT_PURCHASE_ORDER, currentForm).then(data => {\n        if (data != null) {\n          resolveFormSuccess()\n        }\n      })\n    }\n\n    // tabs\n    const tabs = [\n      { title: 'Purchase Order Information', icon: mdiBookInformationVariant },\n      { title: 'Purchase Order Logs', icon: mdiClipboardListOutline },\n      { title: 'Purchase Order Payment Logs', icon: mdiCurrencyUsd },\n    ]\n\n    const handleAddExpense = () => {\n      if (expenseRow.value < 5) expenseRow.value += 1\n    }\n\n    const attachExpense = (item, index) => {\n      attachedExpenses.value[index] = item\n    }\n\n    return {\n      conversionRate,\n      moneyFormat,\n      canMarkAsInTransitPO,\n      id,\n      tabs,\n      tab,\n      optionsLocal,\n      orderItems,\n      goBack,\n      save,\n      showAlert,\n      errors,\n      price,\n      formatPrice,\n      dollarPercentageToPay,\n      pesoPercentageToPay,\n      balanceToPay,\n      supplier,\n      handleAddExpense,\n      attachExpense,\n      expenseRow,\n      attachedExpenses,\n      details,\n    }\n  },\n}\n</script>\n<style>\n.text-green input {\n  color: chartreuse !important;\n}\n\n</style>\n"]}]}