{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/pages/sales/drs/SalesOrderItems.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/pages/sales/drs/SalesOrderItems.vue","mtime":1665318811262},{"path":"/Users/mark/projects/enco-fe/node_modules/css-loader/dist/cjs.js","mtime":1665368593526},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1665368593779},{"path":"/Users/mark/projects/enco-fe/node_modules/postcss-loader/src/index.js","mtime":1665368593757},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1665368576185},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1665368593779}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dC1ncmVlbiBpbnB1dCB7CiAgY29sb3I6IGNoYXJ0cmV1c2UgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["SalesOrderItems.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA;AACA;AACA","file":"SalesOrderItems.vue","sourceRoot":"src/views/pages/sales/drs","sourcesContent":["<template>\n  <v-row class=\"\">\n    <v-col cols=\"12\">\n      <v-alert\n        color=\"success\"\n        text\n        style=\"margin-bottom: -30px\"\n      >\n        <div class=\"d-flex align-start\">\n          <v-icon color=\"success\">\n            {{ icons.mdiInformation }}\n          </v-icon>\n          <div class=\"ms-3\">\n            <p class=\"text-base font-weight-medium mb-1\">\n              Sales Order Items\n            </p>\n          </div>\n        </div>\n      </v-alert>\n    </v-col>\n    <v-col\n      class=\"\"\n      cols=\"12\"\n    >\n      <v-data-table\n        v-model=\"selectedOrderItems\"\n        :headers=\"headers\"\n        :items=\"orderItems\"\n        :items-per-page=\"5\"\n        :search=\"search\"\n        item-key=\"order_item_id\"\n        show-select\n      >\n        <template v-slot:item.data-table-select=\"{ item, isSelected, select }\">\n          <v-simple-checkbox\n            :value=\"isSelected\"\n            :disabled=\"disabled\"\n            :ripple=\"false\"\n            @input=\"select($event)\"\n          ></v-simple-checkbox>\n        </template>\n        <template v-slot:top>\n          <v-toolbar\n            flat\n          >\n            <v-card-text>\n              <v-row class=\"mt-10\">\n                <v-col\n                  cols=\"4\"\n                >\n                  <v-text-field\n                    v-model=\"search\"\n                    :append-icon=\"icons.mdiMagnify\"\n                    label=\"Search\"\n                    single-line\n                    hide-details\n                  ></v-text-field>\n                </v-col>\n                <v-col\n                  cols=\"4\"\n                >\n                </v-col>\n                <v-col\n                  class=\"\"\n                  cols=\"4\"\n                >\n                  <v-currency-field\n                    v-model=\"salesOrderTotalAmount\"\n                    outlined\n                    class=\"text-green\"\n                    disabled\n                    dense\n                    hide-details=\"auto\"\n                    label=\"Sales Order Total Amount\"\n                  ></v-currency-field>\n                </v-col>\n                <v-col\n                  cols=\"4\"\n                  offset-md=\"4\"\n                >\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-toolbar>\n        </template>\n        <template #item.price=\"{ item }\">\n          <v-currency-field\n            v-model=\"item.price\"\n            prefix=\"PHP\"\n            class=\"text-green\"\n            disabled\n          >\n          </v-currency-field>\n        </template>\n        <template #item.total_amount=\"{ item }\">\n          <v-currency-field\n            v-model=\"item.total_amount\"\n            prefix=\"PHP\"\n            class=\"text-green\"\n            disabled\n          >\n          </v-currency-field>\n        </template>\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon\n            small\n            @click=\"deleteItem(item)\"\n          >\n            {{ icons.mdiDeleteCircle }}\n          </v-icon>\n        </template>\n      </v-data-table>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {\n  mdiAccountEdit,\n  mdiDeleteCircle,\n  mdiInformation,\n  mdiTextBoxPlus,\n} from '@mdi/js'\nimport {\n  computed, ref, toRef, watch,\n} from '@vue/composition-api'\nimport store from '@/store'\n\nexport default {\n  name: 'SaleOrderItems',\n  props: {\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: (() => 'Create'),\n    },\n    customerId: {\n      type: Number,\n      required: false,\n      default: null,\n    },\n    items: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props, { emit }) {\n    store.dispatch('ProductStore/list')\n    const search = ref()\n    const modeData = toRef(props, 'mode')\n    const customerIdData = toRef(props, 'customerId')\n    const formData = ref({})\n    const formTitle = ref('Add Item')\n    const existingSalesOrderItems = toRef(props, 'items')\n    const orderItems = computed(() => {\n      if (modeData.value === 'Create') {\n        return store.state.SalesOrderStore.items?.filter(item => item.has_dr === 0)\n      }\n\n      return store.state.SalesOrderStore.items\n    })\n    const products = computed(() => store.state.ProductStore.list)\n    const selectedOrderItems = ref([])\n    const currentItem = ref({\n      product_id: null,\n      quantity: null,\n      price: null,\n      total_amount: 0,\n      unit: null,\n      name: null,\n      sku: null,\n      slug: null,\n    })\n\n    const salesOrderTotalAmount = ref(0)\n    const orderItemIds = ref([])\n\n    store.dispatch('SalesOrderStore/resetOrderItems')\n\n    watch(customerIdData, () => {\n      salesOrderTotalAmount.value = 0\n      selectedOrderItems.value = []\n\n      if (customerIdData.value === null) {\n        store.dispatch('SalesOrderStore/resetOrderItems')\n      }\n    })\n\n    watch(orderItems, () => {\n      salesOrderTotalAmount.value = 0\n\n      selectedOrderItems.value = []\n\n      if (existingSalesOrderItems.value) {\n        existingSalesOrderItems.value.forEach(item => {\n          const findItem = orderItems.value.find(orderItem => orderItem.order_item_id === item.sales_order_item_id)\n\n          if (findItem) {\n            selectedOrderItems.value.push(findItem)\n          }\n        })\n      }\n    })\n\n    watch(selectedOrderItems, () => {\n      orderItemIds.value = []\n\n      if (selectedOrderItems.value.length > 0) {\n        salesOrderTotalAmount.value = 0\n\n        selectedOrderItems.value.forEach(orderItem => {\n          if (orderItem) {\n            orderItemIds.value.push(orderItem.order_item_id)\n            salesOrderTotalAmount.value = parseFloat(salesOrderTotalAmount.value) + parseFloat(orderItem?.total_amount)\n          }\n        })\n      } else {\n        salesOrderTotalAmount.value = 0\n      }\n\n      emit('totalAmount', salesOrderTotalAmount.value)\n      emit('orderItemIds', orderItemIds.value)\n    })\n\n    return {\n      search,\n      selectedOrderItems,\n      salesOrderTotalAmount,\n      formTitle,\n      currentItem,\n      orderItems,\n      formData,\n      products,\n      headers: [\n        { text: 'Date', sortable: true, value: 'date_posted' },\n        { text: 'SO No', value: 'sales_order_number', sortable: true },\n        { text: 'Product Name', value: 'product_name', sortable: true },\n        { text: 'Quantity', value: 'quantity', sortable: true },\n        { text: 'Unit', value: 'unit', sortable: true },\n        { text: 'Price', value: 'price', sortable: true },\n        { text: 'Amount', value: 'total_amount', sortable: true },\n      ],\n      icons: {\n        mdiAccountEdit,\n        mdiDeleteCircle,\n        mdiInformation,\n        mdiTextBoxPlus,\n      },\n    }\n  },\n}\n</script>\n\n<style>\n.text-green input {\n  color: chartreuse !important;\n}\n</style>\n"]}]}