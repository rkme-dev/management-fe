{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/pages/sales/SaleOrderItems.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/pages/sales/SaleOrderItems.vue","mtime":1663477790988},{"path":"/Users/mark/projects/enco-fe/node_modules/css-loader/dist/cjs.js","mtime":1662812545744},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662812546066},{"path":"/Users/mark/projects/enco-fe/node_modules/postcss-loader/src/index.js","mtime":1662812546032},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1662812531113},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1662812546066}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRleHQtZ3JlZW4gaW5wdXQgewogIGNvbG9yOiBjaGFydHJldXNlICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["SaleOrderItems.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqWA;AACA;AACA","file":"SaleOrderItems.vue","sourceRoot":"src/views/pages/sales","sourcesContent":["<template>\n  <v-row class=\"mt-10\">\n    <v-col cols=\"12\">\n      <v-alert\n        color=\"success\"\n        text\n        style=\"margin-bottom: -30px\"\n      >\n        <div class=\"d-flex align-start\">\n          <v-icon color=\"success\">\n            {{ icons.mdiInformation }}\n          </v-icon>\n          <div class=\"ms-3\">\n            <p class=\"text-base font-weight-medium mb-1\">\n              Sales Order Items\n            </p>\n          </div>\n        </div>\n      </v-alert>\n    </v-col>\n    <v-col\n      class=\"pa-16\"\n      cols=\"12\"\n    >\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"orderItems\"\n        :items-per-page=\"5\"\n      >\n        <template v-slot:top>\n          <v-toolbar\n            color=\"primary\"\n            flat\n          >\n            <v-card-text>\n              <v-row>\n                <v-col\n                  class=\"mt-4\"\n                  cols=\"4\"\n                >\n                  <v-currency-field\n                    v-model=\"salesOrderTotalAmount\"\n                    outlined\n                    class=\"text-green\"\n                    disabled\n                    dense\n                    hide-details=\"auto\"\n                    label=\"Sales Order Total Amount\"\n                  ></v-currency-field>\n                </v-col>\n                <v-col\n                  cols=\"4\"\n                  offset-md=\"4\"\n                >\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-dialog\n              v-model=\"itemFormModal\"\n              width=\"1200px\"\n              height=\"500px\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  elevation=\"10\"\n                  color=\"success\"\n                  dark\n                  class=\"mb-2\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  Add Item\n                </v-btn>\n              </template>\n              <v-card>\n                <v-card-title>\n                  <span class=\"headline\">{{ formTitle }}</span>\n                </v-card-title>\n                <v-card-text>\n                  <v-form>\n                    <v-row>\n                      <v-col cols=\"12\">\n                        <v-alert\n                          color=\"primary\"\n                          text\n                          style=\"margin-bottom: -10px\"\n                        >\n                          <div class=\"d-flex align-start\">\n                            <v-icon color=\"primary\">\n                              {{ icons.mdiTextBoxPlus }}\n                            </v-icon>\n                            <div class=\"ms-3\">\n                              <p class=\"text-base font-weight-medium mb-1\">\n                                Item\n                              </p>\n                            </div>\n                          </div>\n                        </v-alert>\n                      </v-col>\n                      <v-col\n                        cols=\"auto\"\n                      >\n                        <v-select\n                          v-model=\"currentItem.product_id\"\n                          :items=\"products\"\n                          item-text=\"name\"\n                          item-value=\"id\"\n                          label=\"Item\"\n                        >\n                        </v-select>\n                      </v-col>\n                      <v-col\n                        cols=\"auto\"\n                      >\n                        <v-text-field\n                          v-model=\"currentItem.quantity\"\n                          outlined\n                          dense\n                          hide-details=\"auto\"\n                          label=\"Quantity\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col\n                        cols=\"auto\"\n                      >\n                        <v-currency-field\n                          v-model=\"currentItem.price\"\n                          outlined\n                          dense\n                          class=\"text-green\"\n                          hide-details=\"auto\"\n                          label=\"Price\"\n                        ></v-currency-field>\n                      </v-col>\n                      <v-col\n                        cols=\"auto\"\n                      >\n                        <v-currency-field\n                          v-model=\"currentItem.total_amount\"\n                          disabled\n                          outlined\n                          class=\"text-green\"\n                          dense\n                          hide-details=\"auto\"\n                          label=\"Total Amount\"\n                        ></v-currency-field>\n                      </v-col>\n                      <v-col\n                        cols=\"12\"\n                        class=\"d-flex\"\n                      >\n                        <v-btn\n                          v-if=\"currentItem.quantity && currentItem.price && currentItem.product_id\"\n                          color=\"primary\"\n                          class=\"me-3 mt-4\"\n                          @click=\"addItem\"\n                        >\n                          Submit\n                        </v-btn>\n                        <v-btn\n                          outlined\n                          class=\"me-3 mt-4\"\n                          type=\"reset\"\n                          @click.prevent=\"cancel\"\n                        >\n                          Cancel\n                        </v-btn>\n                      </v-col>\n                    </v-row>\n                  </v-form>\n                </v-card-text>\n              </v-card>\n            </v-dialog>\n          </v-toolbar>\n        </template>\n        <template #[`item.total_amount`]=\"{item}\">\n          <div class=\"d-flex justify-center text-green text--primary\">\n            <span class=\"text-green\">{{ item.total_amount }}</span>\n          </div>\n        </template>\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon\n            small\n            @click=\"deleteItem(item)\"\n          >\n            {{ icons.mdiDeleteCircle }}\n          </v-icon>\n        </template>\n      </v-data-table>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {\n  mdiAccountEdit,\n  mdiDeleteCircle,\n  mdiInformation,\n  mdiTextBoxPlus,\n} from '@mdi/js'\nimport { computed, ref, toRef, watch } from '@vue/composition-api'\nimport store from '@/store'\n\nexport default {\n  name: 'SaleOrderItems',\n  props: {\n    mode: {\n      type: String,\n      required: false,\n      default: (() => 'Create'),\n    },\n    items: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props, { emit }) {\n    store.dispatch('ProductStore/list')\n    const modeData = toRef(props, 'mode')\n    const itemFormModal = ref(false)\n    const formData = ref({})\n    const formTitle = ref('Add Item')\n    const orderItems = ref([])\n    const products = computed(() => store.state.ProductStore.list)\n    const currentItem = ref({\n      product_id: null,\n      quantity: null,\n      price: null,\n      total_amount: null,\n      name: null,\n      sku: null,\n      slug: null,\n    })\n    const product = ref({\n      name: null,\n      slug: null,\n      sku: null,\n    })\n    const totalAmount = ref(0)\n    if (modeData.value === 'Edit') {\n      orderItems.value = toRef(props, 'items')\n    }\n\n    watch(currentItem.value, () => {\n      if (currentItem.value.product_id) {\n        const productRaw = products.value.find(item => item.id === currentItem.value.product_id)\n        product.value.name = productRaw.name\n        product.value.slug = productRaw.slug\n        product.value.sku = productRaw.sku\n      }\n\n      if (currentItem.value.quantity && currentItem.value.price) {\n        totalAmount.value = parseFloat(currentItem.value.quantity * currentItem.value.price)\n      } else {\n        totalAmount.value = 0\n      }\n    })\n\n    watch(totalAmount, () => {\n      currentItem.value.total_amount = totalAmount.value\n    })\n\n    watch(product.value, () => {\n      currentItem.value.name = product.value.name\n      currentItem.value.slug = product.value.slug\n      currentItem.value.sku = product.value.sku\n    })\n\n    const salesOrderTotalAmount = ref(0)\n\n    watch(orderItems, () => {\n      orderItems.value.forEach(orderItem => {\n        salesOrderTotalAmount.value = parseFloat(salesOrderTotalAmount.value + orderItem.total_amount)\n      })\n    })\n\n    const addItem = () => {\n      orderItems.value.push({\n        product_id: currentItem.value.product_id,\n        quantity: currentItem.value.quantity,\n        price: currentItem.value.price,\n        total_amount: currentItem.value.total_amount,\n        name: currentItem.value.name,\n        sku: currentItem.value.sku,\n        slug: currentItem.value.slug,\n      })\n\n      emit('addItem', orderItems.value)\n\n      itemFormModal.value = false\n\n      // Manually set each property to null and don't assign a completely new object it will ruin the watch component\n      setTimeout(() => {\n        currentItem.value.product_id = null\n        currentItem.value.quantity = null\n        currentItem.value.price = null\n        currentItem.value.total_amount = null\n        product.value.name = null\n        product.value.sku = null\n        product.value.slug = null\n      }, 1000)\n    }\n\n    const deleteItem = item => {\n      const index = orderItems.value.findIndex(orderItem => (orderItem.product_id === item.product_id && orderItem.total_amount === item.total_amount))\n      orderItems.value.splice(index, 1)\n      emit('addItem', orderItems.value)\n    }\n\n    const cancel = () => {\n      itemFormModal.value = false\n    }\n\n    return {\n      salesOrderTotalAmount,\n      addItem,\n      cancel,\n      formTitle,\n      currentItem,\n      orderItems,\n      deleteItem,\n      formData,\n      itemFormModal,\n      totalAmount,\n      products,\n      headers: [\n        { text: 'Item Code', sortable: true, value: 'sku' },\n        { text: 'Name', value: 'name' },\n        { text: 'Quantity', value: 'quantity' },\n        { text: 'Unit', value: 'unit' },\n        { text: 'Price (piece)', value: 'price' },\n        { text: 'Total Amount', value: 'total_amount' },\n        { text: 'Actions', value: 'actions' },\n      ],\n      userData: [\n        {\n          id: 1,\n          full_name: 'Test',\n          email: 'test@gmail.com',\n          date: '02/02/2022',\n          experience: 'test',\n          age: 23,\n        },\n      ],\n      icons: {\n        mdiAccountEdit,\n        mdiDeleteCircle,\n        mdiInformation,\n        mdiTextBoxPlus,\n      },\n    }\n  },\n}\n</script>\n\n<style>\n.text-green input {\n  color: chartreuse !important;\n}\n</style>\n"]}]}