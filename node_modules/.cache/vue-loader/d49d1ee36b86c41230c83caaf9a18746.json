{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/projects/enco-fe/src/views/pages/sales/client/ClientUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/views/pages/sales/client/ClientUpdate.vue","mtime":1656541982216},{"path":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js","mtime":1652172763063},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1650363912993},{"path":"/Users/mark/projects/enco-fe/node_modules/vue-loader/lib/index.js","mtime":1650363919730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWRpQWNjb3VudE91dGxpbmV9IGZyb20gJ0BtZGkvanMnCmltcG9ydCBDbGllbnRJbmZvIGZyb20gJy4vQ2xpZW50SW5mby52dWUnCmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwppbXBvcnQgc3RvcmUgZnJvbSAiQC9zdG9yZSI7CmltcG9ydCB7R0VUX0NVU1RPTUVSfSBmcm9tICJAL3N0b3JlL2FjdGlvbnMudHlwZSI7CmltcG9ydCB7b25Nb3VudGVkLCByZWZ9IGZyb20gIkB2dWUvY29tcG9zaXRpb24tYXBpL2Rpc3QvdnVlLWNvbXBvc2l0aW9uLWFwaSI7CmltcG9ydCB7Q3VzdG9tZXJzU2VydmljZX0gZnJvbSAiQC91dGlscy9hcGkuc2VydmljZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2xpZW50SW5mbywKICB9LAogIHNldHVwKCkgewogICAgY29uc3QgaWQgPSByb3V0ZXIuaGlzdG9yeS5jdXJyZW50LnBhcmFtcy5pZAogICAgc3RvcmUuZGlzcGF0Y2goR0VUX0NVU1RPTUVSLCByb3V0ZXIuaGlzdG9yeS5jdXJyZW50LnBhcmFtcy5pZCkKCiAgICBsZXQgY2xpZW50SW5mbyA9IHJlZih7fSkKCiAgICBvbk1vdW50ZWQoYXN5bmMgKCkgPT4gewogICAgICBhd2FpdCBDdXN0b21lcnNTZXJ2aWNlLmZpbmQoaWQpCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgY2xpZW50SW5mby52YWx1ZSA9IHJlc3BvbnNlLmRhdGEuZGF0YQogICAgICAgIH0pCiAgICB9KQoKICAgIHJldHVybiB7CiAgICAgIGNsaWVudEluZm8sCiAgICAgIGljb25zOiB7CiAgICAgICAgbWRpQWNjb3VudE91dGxpbmUsCiAgICAgIH0sCiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["ClientUpdate.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClientUpdate.vue","sourceRoot":"src/views/pages/sales/client","sourcesContent":["<template>\n  <v-card id=\"client-creation-card\">\n    <v-toolbar\n      color=\"teal\"\n      dark\n    >\n      <v-toolbar-title>Update Client Information</v-toolbar-title>\n    </v-toolbar>\n    <client-info :information-data=\"clientInfo\" :mode=\"'update'\"></client-info>\n  </v-card>\n</template>\n\n<script>\nimport {mdiAccountOutline} from '@mdi/js'\nimport ClientInfo from './ClientInfo.vue'\nimport router from \"@/router\";\nimport store from \"@/store\";\nimport {GET_CUSTOMER} from \"@/store/actions.type\";\nimport {onMounted, ref} from \"@vue/composition-api/dist/vue-composition-api\";\nimport {CustomersService} from \"@/utils/api.service\";\n\nexport default {\n  components: {\n    ClientInfo,\n  },\n  setup() {\n    const id = router.history.current.params.id\n    store.dispatch(GET_CUSTOMER, router.history.current.params.id)\n\n    let clientInfo = ref({})\n\n    onMounted(async () => {\n      await CustomersService.find(id)\n        .then(response => {\n          clientInfo.value = response.data.data\n        })\n    })\n\n    return {\n      clientInfo,\n      icons: {\n        mdiAccountOutline,\n      },\n    }\n  },\n}\n</script>\n"]}]}