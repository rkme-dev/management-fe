{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js!/Users/mark/projects/enco-fe/node_modules/vuetify/lib/components/VSparkline/VSparkline.js","dependencies":[{"path":"/Users/mark/projects/enco-fe/node_modules/vuetify/lib/components/VSparkline/VSparkline.js","mtime":1665368575004},{"path":"/Users/mark/projects/enco-fe/babel.config.js","mtime":1655991784146},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1665368576185},{"path":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js","mtime":1665368576151}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["Colorable","mixins","genPoints","genBars","genPath","extend","name","inheritAttrs","props","autoDraw","Boolean","autoDrawDuration","type","Number","default","autoDrawEasing","String","autoLineWidth","color","fill","gradient","Array","gradientDirection","validator","includes","val","height","labels","labelSize","lineWidth","padding","showLabels","smooth","value","width","data","lastLength","computed","parsedPadding","parsedWidth","parsedHeight","parseInt","parsedLabelSize","totalHeight","hasLabels","totalWidth","Math","max","length","_lineWidth","totalValues","totalPadding","parseFloat","boundary","minX","maxX","minY","maxY","$scopedSlots","label","parsedLabels","points","_values","len","i","item","push","x","normalizedValues","map","textY","y","_radius","watch","immediate","handler","$nextTick","$refs","path","getTotalLength","style","transition","strokeDasharray","strokeDashoffset","abs","toString","getBoundingClientRect","transformOrigin","transform","methods","genGradient","slice","stops","reverse","index","$createElement","attrs","offset","id","_uid","gradientUnits","x1","y1","x2","y2","genG","children","fontSize","textAnchor","dominantBaseline","d","stroke","ref","genLabels","offsetX","genLabel","undefined","bars","display","viewBox","genClipPath","rounding","rx","ry","attributeName","from","to","dur","genTrend","setTextColor","$attrs","render","h"],"sourceRoot":"","sources":["../../../src/components/VSparkline/VSparkline.ts"],"sourcesContent":["// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            gradientUnits: 'userSpaceOnUse',\n            x1: gradientDirection === 'left' ? '100%' : '0',\n            y1: gradientDirection === 'top' ? '100%' : '0',\n            x2: gradientDirection === 'right' ? '100%' : '0',\n            y2: gradientDirection === 'bottom' ? '100%' : '0',\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n"]}]}