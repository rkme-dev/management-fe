{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js!/Users/mark/projects/enco-fe/node_modules/vuetify/lib/util/colorUtils.js","dependencies":[{"path":"/Users/mark/projects/enco-fe/node_modules/vuetify/lib/util/colorUtils.js","mtime":1655107919531},{"path":"/Users/mark/projects/enco-fe/babel.config.js","mtime":1654585219618},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1650363912993},{"path":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js","mtime":1652172763063}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["consoleWarn","chunk","padEnd","toXYZ","isCssColor","color","match","colorToInt","rgb","c","substring","length","split","map","char","join","parseInt","TypeError","constructor","name","isNaN","classToHex","colors","currentTheme","toString","trim","replace","colorName","colorModifier","hexColor","base","intToHex","repeat","colorToHex","HSVAtoRGBA","hsva","h","s","v","a","f","k","n","Math","max","min","round","r","g","b","RGBAtoHSVA","rgba","hsv","HSVAtoHSLA","l","sprime","HSLAtoHSVA","hsl","RGBAtoCSS","RGBtoCSS","RGBAtoHex","toHex","substr","toUpperCase","HexToRGBA","hex","slice","HexToHSVA","HSVAtoHex","parseHex","startsWith","x","parseGradient","gradient","Object","values","RGBtoInt","contrastRatio","c1","c2","y1","y2"],"sourceRoot":"","sources":["../../src/util/colorUtils.ts"],"sourcesContent":["// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport { toXYZ } from './color/transformSRGB'\n\n// Types\nimport { VuetifyThemeVariant } from 'types/services/theme'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/)\n}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color[0] === '#' ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<VuetifyThemeVariant>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGBA(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n *\n * @param c1 First color\n * @param c2 Second color\n */\nexport function contrastRatio (c1: RGBA, c2: RGBA): number {\n  const [, y1] = toXYZ(RGBtoInt(c1))\n  const [, y2] = toXYZ(RGBtoInt(c2))\n\n  return (Math.max(y1, y2) + 0.05) / (Math.min(y1, y2) + 0.05)\n}\n"]}]}