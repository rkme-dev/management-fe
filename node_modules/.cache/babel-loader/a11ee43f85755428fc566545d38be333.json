{"remainingRequest":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js!/Users/mark/projects/enco-fe/src/service/AxiosInterceptors.js","dependencies":[{"path":"/Users/mark/projects/enco-fe/src/service/AxiosInterceptors.js","mtime":1655111382365},{"path":"/Users/mark/projects/enco-fe/babel.config.js","mtime":1655991784146},{"path":"/Users/mark/projects/enco-fe/node_modules/cache-loader/dist/cjs.js","mtime":1650363912993},{"path":"/Users/mark/projects/enco-fe/node_modules/babel-loader/lib/index.js","mtime":1652172763063}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL21hcmsvcHJvamVjdHMvZW5jby1mZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYXJrL3Byb2plY3RzL2VuY28tZmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBUb2tlblNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlL1Rva2VuU2VydmljZSc7CmltcG9ydCBBeGlvc0luc3RhbmNlIGZyb20gJ0Avc2VydmljZS9BeGlvc0luc3RhbmNlJzsKCnZhciBBeGlvc0ludGVyY2VwdG9ycyA9IGZ1bmN0aW9uIEF4aW9zSW50ZXJjZXB0b3JzKHN0b3JlKSB7CiAgdmFyIGlzUmVmcmVzaGluZyA9IGZhbHNlOwogIHZhciBmYWlsZWRRdWV1ZSA9IFtdOwoKICB2YXIgcHJvY2Vzc1F1ZXVlID0gZnVuY3Rpb24gcHJvY2Vzc1F1ZXVlKGVycm9yKSB7CiAgICB2YXIgdG9rZW4gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG51bGw7CiAgICBmYWlsZWRRdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9tKSB7CiAgICAgIGlmIChlcnJvcikgewogICAgICAgIHByb20ucmVqZWN0KGVycm9yKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBwcm9tLnJlc29sdmUodG9rZW4pOwogICAgICB9CiAgICB9KTsKICAgIGZhaWxlZFF1ZXVlID0gW107CiAgfTsKCiAgQXhpb3NJbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogICAgdmFyIHRva2VuID0gVG9rZW5TZXJ2aWNlLmdldExvY2FsQWNjZXNzVG9rZW4oKTsKCiAgICBpZiAodG9rZW4pIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduCiAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSAiQmVhcmVyICIuY29uY2F0KHRva2VuKTsKICAgIH0KCiAgICByZXR1cm4gY29uZmlnOwogIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICB9KTsKICBBeGlvc0luc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlcykgewogICAgcmV0dXJuIHJlczsKICB9LCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZXJyKSB7CiAgICAgIHZhciBvcmlnaW5hbENvbmZpZywgcnMsIGFjY2Vzc1Rva2VuOwogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgb3JpZ2luYWxDb25maWcgPSBlcnIuY29uZmlnOwoKICAgICAgICAgICAgICBpZiAoIShvcmlnaW5hbENvbmZpZy51cmwgIT09ICcvbG9naW4nICYmIG9yaWdpbmFsQ29uZmlnLnVybCAhPT0gJy9yZWZyZXNoLXRva2VuJyAmJiBlcnIucmVzcG9uc2UpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmICghKGVyci5yZXNwb25zZS5zdGF0dXMgPT09IDQwMSAmJiAhb3JpZ2luYWxDb25maWcuX3JldHJ5KSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoIWlzUmVmcmVzaGluZykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICAgICAgICAgIGZhaWxlZFF1ZXVlLnB1c2goewogICAgICAgICAgICAgICAgICByZXNvbHZlOiByZXNvbHZlLAogICAgICAgICAgICAgICAgICByZWplY3Q6IHJlamVjdAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAodG9rZW4pIHsKICAgICAgICAgICAgICAgIG9yaWdpbmFsQ29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pOwogICAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zSW5zdGFuY2Uob3JpZ2luYWxDb25maWcpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2hhZG93CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycik7CiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZQogICAgICAgICAgICAgIG9yaWdpbmFsQ29uZmlnLl9yZXRyeSA9IHRydWU7CiAgICAgICAgICAgICAgaXNSZWZyZXNoaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zSW5zdGFuY2UucG9zdCgnL3JlZnJlc2gtdG9rZW4nLCB7CiAgICAgICAgICAgICAgICByZWZyZXNoVG9rZW46IFRva2VuU2VydmljZS5nZXRMb2NhbFJlZnJlc2hUb2tlbigpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIHJzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBhY2Nlc3NUb2tlbiA9IHJzLmRhdGEuYWNjZXNzVG9rZW47CiAgICAgICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ0F1dGhTdG9yZS9yZWZyZXNoVG9rZW4nLCBhY2Nlc3NUb2tlbik7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnVwZGF0ZUxvY2FsQWNjZXNzVG9rZW4oewogICAgICAgICAgICAgICAgdG9rZW46IGFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcHJvY2Vzc1F1ZXVlKG51bGwsIGFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBBeGlvc0luc3RhbmNlKG9yaWdpbmFsQ29uZmlnKSk7CgogICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxODsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDcpOwogICAgICAgICAgICAgIHByb2Nlc3NRdWV1ZShlcnIsIG51bGwpOwogICAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdBdXRoU3RvcmUvbG9nb3V0Jyk7CiAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL3BhZ2VzL2xvZ2luJzsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdChfY29udGV4dC50MCkpOwoKICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjQ7CiAgICAgICAgICAgICAgaXNSZWZyZXNoaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDI0KTsKCiAgICAgICAgICAgIGNhc2UgMjc6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QoZXJyKSk7CgogICAgICAgICAgICBjYXNlIDI4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzcsIDE4LCAyNCwgMjddXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCkpOwp9OwoKZXhwb3J0IGRlZmF1bHQgQXhpb3NJbnRlcmNlcHRvcnM7"},{"version":3,"names":["TokenService","AxiosInstance","AxiosInterceptors","store","isRefreshing","failedQueue","processQueue","error","token","forEach","prom","reject","resolve","interceptors","request","use","config","getLocalAccessToken","headers","Authorization","Promise","response","res","err","originalConfig","url","status","_retry","push","then","catch","post","refreshToken","getLocalRefreshToken","rs","accessToken","data","dispatch","updateLocalAccessToken","window","location","href"],"sources":["/Users/mark/projects/enco-fe/src/service/AxiosInterceptors.js"],"sourcesContent":["import TokenService from '@/service/TokenService'\nimport AxiosInstance from '@/service/AxiosInstance'\n\nconst AxiosInterceptors = store => {\n  let isRefreshing = false\n  let failedQueue = []\n\n  const processQueue = (error, token = null) => {\n    failedQueue.forEach(prom => {\n      if (error) {\n        prom.reject(error)\n      } else {\n        prom.resolve(token)\n      }\n    })\n\n    failedQueue = []\n  }\n\n  AxiosInstance.interceptors.request.use(config => {\n    const token = TokenService.getLocalAccessToken()\n    if (token) {\n      // eslint-disable-next-line no-param-reassign\n      config.headers.Authorization = `Bearer ${token}`\n    }\n\n    return config\n  },\n  error => Promise.reject(error))\n  AxiosInstance.interceptors.response.use(\n    res => res,\n    async err => {\n      const originalConfig = err.config\n\n      if ((originalConfig.url !== '/login' && originalConfig.url !== '/refresh-token') && err.response) {\n        // eslint-disable-next-line no-underscore-dangle\n        if (err.response.status === 401 && !originalConfig._retry) {\n          if (isRefreshing) {\n            return new Promise(((resolve, reject) => {\n              failedQueue.push({ resolve, reject })\n            })).then(token => {\n              originalConfig.headers.Authorization = `Bearer ${token}`\n\n              return AxiosInstance(originalConfig)\n              // eslint-disable-next-line no-shadow\n            }).catch(err => Promise.reject(err))\n          }\n\n          // eslint-disable-next-line no-underscore-dangle\n          originalConfig._retry = true\n          isRefreshing = true\n\n          try {\n            const rs = await AxiosInstance.post('/refresh-token', {\n              refreshToken: TokenService.getLocalRefreshToken(),\n            })\n            const { accessToken } = rs.data\n            store.dispatch('AuthStore/refreshToken', accessToken)\n            TokenService.updateLocalAccessToken({ token: accessToken })\n            processQueue(null, accessToken)\n\n            return AxiosInstance(originalConfig)\n          } catch (_error) {\n            processQueue(err, null)\n            store.dispatch('AuthStore/logout')\n            window.location.href = '/pages/login'\n\n            return Promise.reject(_error)\n          } finally {\n            isRefreshing = true\n          }\n        }\n      }\n\n      return Promise.reject(err)\n    },\n  )\n}\nexport default AxiosInterceptors\n"],"mappings":"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"}]}