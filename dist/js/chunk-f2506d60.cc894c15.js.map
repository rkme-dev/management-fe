{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.set.constructor.js","webpack:///../../../src/components/VForm/VForm.ts","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts"],"names":["collection","collectionStrong","init","this","arguments","length","undefined","mixins","BindsAttrs","RegistrableProvide","extend","name","provide","form","inheritAttrs","props","disabled","Boolean","lazyValidation","readonly","value","data","inputs","watchers","errorBag","watch","handler","val","errors","Object","values","includes","$emit","deep","immediate","methods","watchInput","input","watcher","$watch","$set","_uid","valid","shouldValidate","hasOwnProperty","validate","filter","reset","forEach","resetErrorBag","setTimeout","resetValidation","register","push","unregister","found","find","i","unwatch","$delete","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","default","baseMixins","Colorable","RegistrableInject","VTreeviewNodeProps","activatable","activeClass","type","String","color","disablePerNode","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","VTreeviewNode","inject","treeview","level","Number","item","parentIsDisabled","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","getObjectValueByPath","key","children","child","isExcluded","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","created","beforeDestroy","checkChildren","Promise","resolve","then","updateOpen","emitOpen","genLabel","$scopedSlots","label","$createElement","slot","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","click","stopPropagation","genCheckbox","$nextTick","updateSelected","emitSelected","genLevel","createRange","map","genNode","unshift","setTextColor","updateActive","emitActive","genChild","scopedSlots","genChildrenWrapper","c","genTransition","VExpandTransition","filterTreeItem","search","textKey","toLocaleLowerCase","indexOf","filterTreeItems","idKey","childrenKey","excluded","match","add","Themeable","Array","dense","hoverable","items","multipleActive","openAll","returnObject","activeCache","Set","nodes","openCache","selectedCache","excludedItems","oldKeys","keys","k","newKeys","getKeys","diff","arrayDiff","oldSelectedCache","buildTree","deepEqual","handleNodeCacheWatcher","getValue","mounted","consoleWarn","updateAll","parent","oldNode","vnode","node","calculateState","updateVnodeState","state","counts","reduce","emitNodeCache","event","cache","updateFn","emitFn","old","getDescendants","descendants","getParents","parents","isParent","delete","isForced","changed","Map","descendant","set","calculated","entries","has","options","bind","themeClasses"],"mappings":"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","file":"js/chunk-f2506d60.cc894c15.js","sourcesContent":["'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\ncollection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// TODO: Remove this module from `core-js@4` since it's replaced to module below\nrequire('../modules/es.set.constructor');\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  disablePerNode: Boolean,\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (!this.disablePerNode && (this.parentIsDisabled && this.selectionType === 'leaf'))\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          disablePerNode: this.disablePerNode,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    disabled: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren) ?? []\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (\n          this.selectionType !== 'independent' &&\n          parent !== null &&\n          !this.nodes.hasOwnProperty(key) &&\n          this.nodes.hasOwnProperty(parent)\n        ) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length && this.selectionType !== 'independent') {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, this.disabled || getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}